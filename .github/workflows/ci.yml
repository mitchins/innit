name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install package with dev tools and ONNX (for parity tests)
          pip install -e ".[onnx,dev]"
          pip install flake8-bugbear vulture pytest-cov

      - name: Lint with ruff and flake8
        run: |
          ruff check innit tests
          flake8 innit tests --max-line-length 100 --extend-ignore E203,E501 --jobs auto

      - name: Check for dead code with vulture
        run: |
          vulture innit innit_*.py --min-confidence 80 || true

      - name: Run tests with coverage
        env:
          CACHEDB: .cache/tinygrad_cache.db
          PYTHONPATH: .
        run: |
          pytest --cov=innit --cov=innit_detector --cov=innit_tinygrad --cov=innit_client \
            --cov-report=xml --cov-report=term-missing -q

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Verify build artifacts
        run: |
          ls -la dist/
          pip install dist/*.whl
          python -c "import innit; from innit import InnitClient; print('import ok')"

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install bandit safety

      - name: Run security checks with bandit
        run: |
          bandit -r innit innit_*.py || true

      - name: Check for known vulnerabilities in dependencies
        run: |
          safety check || true
